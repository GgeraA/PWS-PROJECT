openapi: 3.0.3
info:
  title: Demo API Docs
  version: 1.0.0
  description: Documentación mínima de ejemplo en Swagger UI
servers:
  - url: http://localhost:8000
paths:
  /hello:
    get:
      summary: Endpoint de prueba (no implementado)
      responses:
        '200':
          description: Respuesta exitosa
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "Hola desde Swagger UI"
                
          
  /auth/register:
    post:
      summary: Registro de usuario
      description: Permite registrar un usuario nuevo con nombre, email y contraseña segura.
      tags:
        - Autenticación
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - nombre
                - email
                - password
              properties:
                nombre:
                  type: string
                  example: "Gerardo"
                email:
                  type: string
                  example: "gerardo@gmail.com"
                password:
                  type: string
                  example: "Passw0rd!"
      responses:
        "200":
          description: Usuario registrado correctamente
        "400":
          description: Error de validación (correo o contraseña inválidos)


  /auth/login:
    post:
      summary: Inicio de sesión
      description: Permite iniciar sesión y recibir un token JWT.
      tags:
        - Autenticación
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  example: "gerardo@gmail.com"
                password:
                  type: string
                  example: "Passw0rd!"
      responses:
        "200":
          description: Inicio de sesión exitoso
        "400":
          description: Campos obligatorios faltantes
        "401":
          description: Credenciales inválidas

  /roles/assign:
    put:
      summary: Asignar rol a usuario (solo admin)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: ["user_id", "role"]
              properties:
                user_id:
                  type: integer
                role:
                  type: string
                  enum: ["admin","usuario","visitante"]
      responses:
        "200":
          description: Role actualizado
        "400":
          description: OTP inválido o expirado